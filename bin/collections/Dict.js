// Generated by CoffeeScript 1.10.0

/*
@author  Oleg Mazko <o.mazko@mail.ru>
@license New BSD License <http://creativecommons.org/licenses/BSD/>
 */

(function() {
  var Dict,
    hasProp = {}.hasOwnProperty;

  Dict = (function() {
    function Dict(locals) {
      var _locals, key, value;
      _locals = {};
      this.get_value = (function(_this) {
        return function(name, def) {
          if (def == null) {
            def = null;
          }
          if (_this.contains(name)) {
            return _locals[name];
          } else {
            return def;
          }
        };
      })(this);
      this.contains = function(name) {
        return {}.hasOwnProperty.call(_locals, name);
      };
      this.clone = (function(_this) {
        return function() {
          return new _this.constructor(_locals);
        };
      })(this);
      this.set_value = function(name, type) {
        return _locals[name] = type;
      };
      this.each = function(fn) {
        var key, results, value;
        results = [];
        for (key in _locals) {
          if (!hasProp.call(_locals, key)) continue;
          value = _locals[key];
          results.push(fn(key, value));
        }
        return results;
      };
      for (key in locals) {
        if (!hasProp.call(locals, key)) continue;
        value = locals[key];
        this.set_value(key, value);
      }
    }

    return Dict;

  })();

  module.exports = Dict;

}).call(this);
